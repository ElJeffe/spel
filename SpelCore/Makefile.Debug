#############################################################################
# Makefile for building: libSpelCore.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.5.0) on: Tue Mar 31 21:45:44 2009
# Project:  SpelCore.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DSPELCORE_LIBRARY -DQT_XML_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtXml -I/usr/include -Idebug -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/usr/lib -shared -Wl,-soname,libSpelCore.so.1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtXml -L/usr/lib -pthread -pthread -lQtNetwork -lssl -lcrypto -pthread -pthread -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = spelcore.cpp \
		server.cpp \
		udplistener.cpp \
		settings.cpp 
OBJECTS       = debug/spelcore.o \
		debug/server.o \
		debug/udplistener.o \
		debug/settings.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/debug_and_release.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/build_pass.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/qt.prf \
		/usr/share/qt/mkspecs/features/unix/thread.prf \
		/usr/share/qt/mkspecs/features/moc.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		SpelCore.pro
QMAKE_TARGET  = SpelCore
DESTDIR       = 
TARGET        = libSpelCore.so.1.0.0
TARGETA       = libSpelCore.a
TARGETD       = libSpelCore.so.1.0.0
TARGET0       = libSpelCore.so
TARGET1       = libSpelCore.so.1
TARGET2       = libSpelCore.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt/mkspecs/linux-g++ -unix CONFIG+=debug_and_release CONFIG+=debug -o Makefile.Debug SpelCore.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/SpelCore1.0.0 || $(MKDIR) debug/SpelCore1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/SpelCore1.0.0/ && $(COPY_FILE) --parents spelcore.h SpelCore_global.h server.h udplistener.h settings.h debug/SpelCore1.0.0/ && $(COPY_FILE) --parents spelcore.cpp server.cpp udplistener.cpp settings.cpp debug/SpelCore1.0.0/ && (cd `dirname debug/SpelCore1.0.0` && $(TAR) SpelCore1.0.0.tar SpelCore1.0.0 && $(COMPRESS) SpelCore1.0.0.tar) && $(MOVE) `dirname debug/SpelCore1.0.0`/SpelCore1.0.0.tar.gz . && $(DEL_FILE) -r debug/SpelCore1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile.Debug


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

debug/spelcore.o: spelcore.cpp spelcore.h \
		SpelCore_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/spelcore.o spelcore.cpp

debug/server.o: server.cpp server.h \
		udplistener.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/server.o server.cpp

debug/udplistener.o: udplistener.cpp udplistener.h \
		settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/udplistener.o udplistener.cpp

debug/settings.o: settings.cpp settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/settings.o settings.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

